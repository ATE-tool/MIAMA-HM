---
title: "JIBE Melbourne: Mortality data analysis"
author: "Chris Jackson"
email: "chris.jackson@mrc-bsu.cam.ac.uk"
format: 
  html:
    code-fold: true
    embed-resources: true
    df-print: paged
toc: true
number-sections: true
editor: visual
---

```{r setup, echo=FALSE, message=FALSE}
library(readxl)
library(tidyverse)
options(scipen = 4)
knitr::opts_chunk$set(echo=TRUE)
```

This document shows how mortality data for the JIBE Melbourne microsimulation is obtained and processed, giving the R code to reproduce the analysis.

The aim is to produce data describing the annual risk of death for a synthetic individual in the microsimulation model.

This is defined here as a a function of the individual's age and sex, area of residence and level of education.

It is calculated based on a combination of routinely-collected data sources, under the assumption that age and sex, small area of residence and level of education are independent risk factors for mortality.

# Data sources

## 2016 Australian geography definitions

Statistical Areas level 2 (SA2), as defined for the 2016 census, are used as the definition of area of residence here. This data file defines the SA2 areas and their mapping to larger areas.

[Source](https://www.abs.gov.au/ausstats/abs@.nsf/mf/1270.0.55.001)

```{r}
sa2 <- read_csv("mortality/original/SA2_2016_AUST.csv", col_types = "cccccccccccd")
```

## Mortality by year of age and sex, for Victoria state (not by smaller areas)

[Source](https://www.abs.gov.au/methodologies/life-tables-methodology/2016-2018)

The mortality rate here, `rate`, is defined as "the proportion of persons dying between exact age x and exact age x+1". For presentation, this is converted to a rate per 1000 people.

```{r}
dats <- read.csv("original/3302055001do001_20162018_Table_1.2.csv",skip=6,
         na=c("","np"), nrows=101)[,1:9]
mf <- rep(c("male","female"),each=4)
names1 <- rep(c("denom","rate","personyears","le"), 2)
names(dats) <- c("age",paste(mf, names1, sep="_"))

victoria_lifetable <- dats |>
  pivot_longer(-age, 
               names_to = c("sex","measure"),
               names_sep = "_") |>
  pivot_wider(names_from="measure", values_from=value) |>
  mutate(rate1000 = rate*1000,
         sex = factor(sex,
                      labels=stringr::str_to_title(sort(unique(.data$sex)))),
         sex = relevel(sex, "Male"))  
```

## Mortality by SA2 small areas in Victoria (not by age and sex)

[Source](https://adp-access.aurin.org.au/dataset/au-govt-abs-abs-deaths-sa2-2012-2020-sa2-2016)

This is provided as a JSON file, rather than a tabular format, so the R processing is more complex here.

The *standardised death rate* is published here. This is the expected number of deaths in the area if the age/sex balance of the area were same as a standard population. This can be compared between areas to describe the excess risk in each area not explainable by differences in age/sex balance.

An area-specific relative rate, relative to the average in the state, is computed by dividing the (published) standardised rate for that area by the average standardised rate. The average standardised rate is computed as a weighted average, weighted by the population in each area

```{r}
#| cache: true
deaths_sa2 <- rjson::fromJSON(file="original/au-govt-abs-abs-deaths-sa2-2012-2020-sa2-2016.json") |>
  pluck("features") |>
  tibble() |>
  set_names("area") |>
  unnest_wider(area) |>
  select(properties) |>
  unnest_wider(properties) |>
  select(sa2_code,
         sa2_name,
         pop="_2016_estimated_resident_population_persons",
         deaths="_2016_deaths_no",
         stdrate="_2016_standardised_death_rate_rate") |>
  mutate(stdrate = as.numeric(ifelse(stdrate=="np", NA, stdrate)))
```

For some SA2 areas, standardised death rates are not published. As explained in the source: "crude rates and Age-standardised Death Rates (SDRs) based on small numbers are volatile and unreliable. SDRs based on less than 20 deaths and crude rates based on a very low death count have not been published and appear as 'np'.".

In these cases, the standardised death rate for the equivalent SA3 area is used here, from the following [source](https://data.aurin.org.au/dataset/au-govt-abs-abs-deaths-sa3-2012-2020-sa3-2016) in the same format as the SA2 data.

```{r}
#| cache: true
deaths_sa3 <- rjson::fromJSON(file="original/au-govt-abs-abs-deaths-sa3-2012-2020-sa3-2016.json") |>
  pluck("features") |>
  tibble() |>
  set_names("area") |>
  unnest_wider(area) |>
  select(properties) |>
  unnest_wider(properties) |>
  select(sa3_code,
         sa3_name,
         pop="_2016_estimated_resident_population_persons",
         deaths="_2016_deaths_no",
         stdrate="_2016_standardised_death_rate_rate") |>
  mutate(stdrate = as.numeric(ifelse(stdrate=="np", NA, stdrate)))
```

Finally, a relative mortality rate `RR` is produced for each area, defined as the rate relative to the average mortality in the state `stdrate_ave`. This average mortality is defined as a weighted average of the area-specific rates, weighted by the population of each area.

```{r}
victoria_sa2_deaths <- deaths_sa2 |>
  left_join(sa2, join_by(sa2_code == SA2_MAINCODE_2016)) |>
  filter(STATE_NAME_2016=="Victoria") |>
  select(sa2_code, sa2_name, sa3_code = "SA3_CODE_2016", pop, deaths, stdrate) |>
  mutate(stdrate_ave = with(.data, sum(stdrate*pop,na.rm = TRUE)/sum(pop))) |>
  # Use SA3 rate if SA2 std rate is missing "np" due to small counts 
  left_join(deaths_sa3 |> select(sa3_code, stdrate_sa3 = stdrate), by="sa3_code") |>
  mutate(stdrate = ifelse(is.na(stdrate), stdrate_sa3, stdrate)) |>
  mutate(RR = stdrate / stdrate_ave)
           
melbourne_sa2_deaths <- victoria_sa2_deaths |> 
  filter(sa2_code %in% sa2$SA2_MAINCODE_2016[sa2$GCCSA_NAME_2016=="Greater Melbourne"])
```

## Effects of education on mortality, by age

From [Welsh et al. 2021](https://doi.org/10.1093/ije/dyab080), Table 1. Age adjusted mortality rates per 100,000 people for high, medium and low education. Age groups 25-44, 45-64 and 65-84. For the whole of Australia, using data from the 2016 census linked to death registrations in 2016 and 2017.

```{r}
rate25 <- c(high=38.8, med=105, low=236) 
rate45 <- c(219, 399, 724)
rate65 <- c(1551, 2201, 3202) 
educ_mort <- as.data.frame(rbind(rate25, rate45, rate65)) |>
  mutate(rrmedium = med/high,
         rrlow = low/high, 
         rrhigh = 1,
         agegroup = c("[25,45)", "[45,65)", "[65,85)")) |>
  pivot_longer(cols=c("rrhigh","rrmedium","rrlow"),
               names_to = "educ",
               names_prefix = "rr",
               values_to = "rr_educ") |>
  select(agegroup, educ, rr_educ) 
```

## Education by area

Proportion in each area who have completed the equivalent of secondary-school ("medium" education), and proportion with a bachelor's degree ("high" education), by area. From the 2016 census, [source](https://data.aurin.org.au/dataset/au-govt-abs-abs-data-by-region-education-and-employment-asgs-sa2-2011-2019-sa2-2016).

This data will be required to appropriately produce mortality rates disagreggated by both area and education (see below).

```{r}
educarea <- read.csv("original/education_sa2_aurin.csv") |>
  filter(yr==2016) |>
  select(sa2_maincode_2016, 
         sa2_name_2016, 
         perc_school = hghst_yr_schl_cmpltd_prsns_agd_15_yrs_cnss_12_eqvlnt_pc,
         perc_degree = prsns_nn_schl_qlfctns_agd_15_yrs_cnss_bchlr_dgre_pc) |>
  mutate(high = perc_degree/100, 
         medium = (perc_school - perc_degree)/100,
         low = 1 - perc_school / 100) |>
  select(sa2_code = sa2_maincode_2016, high, medium, low) |>
  mutate(sa2_code =  as.character(sa2_code)) |>
  left_join(sa2, join_by(sa2_code == SA2_MAINCODE_2016)) |>
  filter(sa2_code %in% sa2$SA2_MAINCODE_2016[sa2$GCCSA_NAME_2016=="Greater Melbourne"]) |>
  select(sa2_code, high, medium, low)

missing_areas <- unique(c(setdiff(melbourne_sa2_deaths$sa2_code, 
                                  educarea$sa2_code), 
                          educarea$sa2_code[is.na(educarea$high)]))

missing_areanames <- sa2$SA2_NAME_2016[sa2$SA2_MAINCODE_2016 %in% missing_areas]
```

`r length(missing_areas)` areas do not have the relevant education data reported in this dataset (SA2 names `r missing_areanames`). Derive the proportion in all of Melbourne with high/medium/low education, to impute for these areas.

```{r}
educ_ave <- educarea |>
  left_join(victoria_sa2_deaths |> select(sa2_code, pop), by="sa2_code") |>
  mutate(high = sum(pop*high, na.rm = TRUE)/sum(pop,na.rm=TRUE),
         medium = sum(pop*medium, na.rm = TRUE)/sum(pop,na.rm=TRUE),
         low = 1 - high - medium) |>
  select(high, medium, low) |>
  head(1)
educarea <- educarea |> 
  filter(!is.na(high), !is.na(medium)) |>
  rbind(data.frame(sa2_code = missing_areas) |>
          cross_join(educ_ave))
```

# Combining data sources

The goal is to estimate the probabilities of death within a year, in Melbourne, by year of age, sex, area of residence (SA2) and education level. These rates apply to the baseline scenario for the microsimulation model. Assume that alternative scenarios (in which disease/death risks are modified) may be handled by multiplying these baseline risks by relative risks of exposure changes.

Firstly, we illustrate two of our sources of data together: (a) age/sex-specific mortality for Victoria, and (b) variation between SA2 areas in mortality (averaged over age/sex within each area)

```{r}
ggplot(victoria_lifetable, aes(x=age, y=rate1000, col=sex)) + 
  geom_hline(data=victoria_sa2_deaths, aes(yintercept = stdrate), 
             col="blue", alpha=0.3, lwd=1.05) +
  geom_line(lwd=1.5) +
  labs(col="") +
  scale_y_continuous(trans="log", 
                     breaks=c(0.0002, 0.0005, 0.001, 0.005, 
                              0.01, 0.05, 0.1, 0.2)*1000) + 
  scale_x_continuous(breaks=seq(0,100,10)) +
  theme_bw() + 
  theme(legend.position = c(0.5, 0.1), 
        legend.justification = "bottom",
        legend.background = element_blank()) +
  annotate(geom="text", x=0, y=20, 
           label="Standardised average rates by small area", 
           col="blue", alpha=0.6, hjust=0) + 
  xlab("Age") + ylab("Mortality rate (per 1000 person-years)") +
  annotate(geom="text", x=10, y=500, 
           label="Average over areas in state, by age and sex", 
           col="blue", alpha=0.6, hjust=0)
#saveRDS(victoria_lifetable, "data-r/victoria_lifetable.rds")
```

These are combined as follows to estimate mortality rates by both area and age/sex.

## Independence model for variations between areas and between age/sex

We assume that the excess mortality risk associated with living in a particular area does not depend on age and sex. We then estimate the area-specific mortality rate for people of a particular age/sex by multiplying the state-wide rate by the area-specific, relative standardised rate.

```{r vic_mort_dep,fig.width=7,fig.height=4}
deaths_age_sa2 <- victoria_lifetable |>
  select(age, sex, rate1000) |>
  cross_join(melbourne_sa2_deaths |> 
               select(sa2_code, sa2_name, RR)) |>
  mutate(rate1000 = rate1000*RR,
         area_sex = paste(sa2_code,sex))
```

These are illustrated:

```{r}
deaths_age_sa2 |>
  filter(sa2_code %in% sample(unique(.data$sa2_code), 100)) |>
  droplevels() |>
ggplot(aes(x=age, y=rate1000, col=sex, group=sa2_code)) + 
  geom_line(lwd=1, alpha=0.2) +
  labs(col="") +
  facet_grid(cols=vars(sex)) +
  scale_y_continuous(trans="log", 
                     breaks=c(0.0002, 0.0005, 0.001, 0.005, 0.01, 0.05, 0.1, 0.2)*1000) + 
  scale_x_continuous(breaks=seq(0,100,10)) +
  theme_bw() +
  theme(legend.position = "none") +
  xlab("Age") + ylab("Mortality rate (per 1000 person-years)")
```

Note that knowing the age balance of each area would not help further to explain these between-area variations, since the age balance is already accounted for in the standardised rates.

## Including other predictors of mortality

To disaggregate mortality by further risk factors, given

-   the average rate $r_{ave}$ over people in the area (of a particular age and sex, but averaged over people with or without the risk factor)

-   a relative (unstandardised) rate $RR$ between people with/without the risk factor

-   the proportions of people with the risk factor $p_1$ and without the risk factor $p_0$

we can estimate the rates with ($r_1$) and without the risk factor ($r_0$), because if $r_{ave} = p_1 r_1 + p_0 r_0 = p_1 r_0 RR + p_0 r_0$,we can estimate $r_0 = r_{ave} / (p_1 RR + p_0)$

Generalising this argument to subgroups with more than two categories $i=1,2,3...$ (beyond with/without), suppose $r_1$ is the mortality rate in some reference group $1$, $p_i$ is the proportion of people in group $i$, and $RR_i$ is the relative risk associated with being in this group compared to group $i=1$, so that $RR_1=0$. We then have

$r_{ave} = r_1 \sum_{i=1}^G p_i RR_i$

we can compute $r_1$ given the remaining ingredients, and hence compute $r_i$ by multiplying $r_1$ by $RR_i$.

We have previously estimated mortality by age, sex and area. We use this method to further disaggregate mortality rates by level of education, given data on agegroup-specific education effects on mortality and rates of education by area. This assumes that the education effects are independent of year of age (within broad age groups), sex and area.

## Disaggregating age/sex/area mortality by education

The effects of education on mortality are published for three age groups (25-44, 45-64 and 65-84). Outside these age groups, mortality effects are assumed to be independent of education level.

```{r}
mort_disagg <- deaths_age_sa2 |> 
  left_join(educarea, by="sa2_code") |>
  pivot_longer(cols = c("high","medium","low"), 
               names_to = "educ", values_to = "p_educ") |>
  mutate(agegroup = cut(age, c(0, 25, 45, 65, 85, Inf),
                        right=FALSE, include.lowest = TRUE)) |>
  left_join(educ_mort, by=c("agegroup","educ")) |>
  mutate(pRR = rr_educ * p_educ) 

sum_p <- mort_disagg |> group_by(age, sa2_code) |> 
  summarise(sum_pRR = sum(pRR), .groups="drop")

mort_disagg <- mort_disagg |> 
  left_join(sum_p, by=c("age","sa2_code")) |>
  rename(rate_ave_educ = rate1000) |>
  mutate(rate = ifelse(
    between(age, 25, 84) & (!(sa2_code %in% missing_areas)), 
    rate_ave_educ * rr_educ / sum_pRR,
    rate_ave_educ),
    prob = 1 - exp(-rate/1000)
  ) |>  select(age, sex, sa2_code, sa2_name, educ, rate, prob) |>
  filter(sa2_code %in% sa2$SA2_MAINCODE_2016[sa2$GCCSA_NAME_2016=="Greater Melbourne"])
saveRDS(mort_disagg, file="processed/mort_disagg.rds")
```

The final dataset produced contains the following columns

`age` Year of age

`sex` Sex

`sa2_code` SA2 area code (2016 definitions)

`sa2_name` SA2 area name

`educ` Level of education (low: no secondary school qualification, medium: secondary school but no bachelor's degree, high: bachelor's degree)

`rate` Mortality rate per 1000 person-years

`prob` Annual mortality risk

and `r nrow(mort_disagg)` rows, one for each of 2 sexes $\times$ 101 years of age $\times$ 3 levels of education $\times$ 309 SA2 areas in Melbourne.

```{r,echo=FALSE}
stopifnot(nrow(mort_disagg)==187254)
```

First five rows:

```{r}
head(mort_disagg, 5)
```

# Summaries of annual mortality probabilities

For each age group, sex and education level, this table shows the median (min-max) annual mortality risk over areas and single years of age.

```{r}
#| rows.print: 30
library(gt)
agecut <- c(0, 18, 45, 65, 80, Inf)
mort_disagg |> 
  mutate(agegroup = cut(age, agecut, right=FALSE, include.lowest = TRUE)) |>
  group_by("Age group"=agegroup, "Sex"=sex, "Education"=educ) |>
  summarise(Median = median(prob), Min = min(prob), Max = max(prob), .groups="drop") |>
  gt() |>
  fmt_number(n_sigfig=2) |>
  cols_align_decimal() |>
  cols_merge_range(Min, Max) |>
  cols_label(Min = "Range")
```
